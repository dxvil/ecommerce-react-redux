[{"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\index.js":"1","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\App\\App.js":"2","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Nav\\Nav.js":"3","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Homepage\\Homepage.js":"4","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Shop\\Shop.js":"5","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Shop\\Shoe\\Shoe.js":"6","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\reducers\\index.js":"7","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\actions\\index.js":"8","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Basket\\Basket.js":"9","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\store.js":"10","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Shop\\Shoe\\ShoeCard.js":"11","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\firebase\\firebaseConfig.js":"12","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\vidgets\\Alert.js":"13","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\firebase\\Firebase.js":"14","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\firebase\\items.js":"15","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\SemanticUI\\Loader.js":"16","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\SemanticUI\\NextIcon.js":"17","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Shop\\UndoBtn.js":"18","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\reducers\\purchaseReducer.js":"19","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\reducers\\initReducer.js":"20","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\reducers\\filterShopReducer.js":"21"},{"size":289,"mtime":1610955634368,"results":"22","hashOfConfig":"23"},{"size":2354,"mtime":1612253258572,"results":"24","hashOfConfig":"23"},{"size":1670,"mtime":1612256818116,"results":"25","hashOfConfig":"23"},{"size":237,"mtime":1607508709511,"results":"26","hashOfConfig":"23"},{"size":9314,"mtime":1612430999702,"results":"27","hashOfConfig":"23"},{"size":3420,"mtime":1612265708753,"results":"28","hashOfConfig":"23"},{"size":337,"mtime":1612423585403,"results":"29","hashOfConfig":"23"},{"size":1391,"mtime":1612424837115,"results":"30","hashOfConfig":"23"},{"size":2197,"mtime":1612363666006,"results":"31","hashOfConfig":"23"},{"size":874,"mtime":1609333161186,"results":"32","hashOfConfig":"23"},{"size":9978,"mtime":1612359783250,"results":"33","hashOfConfig":"23"},{"size":389,"mtime":1610824047146,"results":"34","hashOfConfig":"23"},{"size":196,"mtime":1610300781413,"results":"35","hashOfConfig":"23"},{"size":831,"mtime":1611829778330,"results":"36","hashOfConfig":"23"},{"size":1992,"mtime":1610901516499,"results":"37","hashOfConfig":"23"},{"size":234,"mtime":1611051568477,"results":"38","hashOfConfig":"23"},{"size":238,"mtime":1611051863097,"results":"39","hashOfConfig":"23"},{"size":232,"mtime":1611652420732,"results":"40","hashOfConfig":"23"},{"size":708,"mtime":1612422529278,"results":"41","hashOfConfig":"23"},{"size":203,"mtime":1612422491164,"results":"42","hashOfConfig":"23"},{"size":831,"mtime":1612441059941,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ci7az9",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\index.js",[],["92","93"],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\App\\App.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Nav\\Nav.js",["94","95"],"import React, { useEffect, useState } from 'react'\nimport './Nav.css'\nimport { Link } from 'react-router-dom'\nimport logo from '../../images/logo.png'\nimport { connect } from 'react-redux'\nimport { appHistory } from '../App/App'\n\nconst Nav = ({ products }) => {\n    const [quantity, setQuantity] = useState(0)\n\n    useEffect(() => {\n        if (products.length !== 0) {\n            const acc = 0\n            setQuantity(products.reduce((acc, item) => acc + item.quantity, 0))\n        } else if (products.length === 0) {\n            setQuantity(0)\n        }\n    })\n\n    const refreshRoute = () => {\n        appHistory.push({ pathname: '/' })\n    }\n\n    const NavStyle = {\n        listStyle: 'none',\n        color: '#000',\n        textDecoration: 'none',\n    }\n\n    return (\n        <nav className='navbar'>\n            <Link to={'/registration'}>\n                <h2>Log in</h2>\n            </Link>\n\n            <img alt='...' className='nav__logo' src={logo} />\n            <ul className='navbar__items'>\n                <Link to='/' style={NavStyle}>\n                    <li>Home</li>\n                </Link>\n                <Link to='/shop' style={NavStyle}>\n                    <li>Shop</li>\n                </Link>\n                <Link to='/basket'>\n                    <li className='nav__cart' onClick={refreshRoute}>\n                        <i className='icon shopping cart'></i>\n                    </li>\n                </Link>\n                <p className='cart-counter'>{quantity}</p>\n            </ul>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { products: state.products }\n}\n\nexport default connect(mapStateToProps, null)(Nav)\n","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Homepage\\Homepage.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Shop\\Shop.js",["96","97"],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Shop\\Shoe\\Shoe.js",["98","99"],"import React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { addItem } from '../../../redux/actions'\nimport { Link } from 'react-router-dom'\n\nconst Shoe = ({ title, price, img, id, addItem, prod }) => {\n    const refContainer = useRef(null)\n    const refProduct = useRef(null)\n    const refTitle = useRef(null)\n    const refPrice = useRef(null)\n    const refPic = useRef(null)\n\n    const buyShoe = () => {\n        let shoe = prod.find((item) => item.id === id)\n        shoe.size = [...shoe.size, 37]\n        addItem(shoe)\n        //change to not so many renders!\n    }\n\n    // useEffect(() => {\n    //     refContainer.current.addEventListener('mousemove', (e) => {\n    //         const card = refProduct.current\n    //         card.style.transform = `rotateX(3deg)`\n    //     })\n    //     refContainer.current.addEventListener('mouseenter', () => {\n    //         const card = refProduct.current\n    //\n    //         card.style.transition = 'none'\n    //         const title = refTitle.current\n    //         title.style.transform = 'translateZ(150px)'\n    //         const price = refPrice.current\n    //         price.style.transform = 'translateZ(120px)'\n    //         const pic = refPic.current\n    //         pic.style.transform = 'translateZ(200px) rotateZ(-15deg)'\n    //     })\n    //\n    //     refContainer.current.addEventListener('mouseleave', () => {\n    //         const card = refProduct.current\n    //         card.style.transform = `rotateY(0deg) rotateX(0deg)`\n    //         card.style.transition = 'all 0.5s ease'\n    //         const title = refTitle.current\n    //         title.style.transform = 'translateZ(0px)'\n    //         const price = refPrice.current\n    //         price.style.transform = 'translateZ(0px)'\n    //         const pic = refPic.current\n    //         pic.style.transform = 'translateZ(0px)'\n    //     })\n    // }, [])\n\n    return (\n        <div ref={refContainer} className='container-product'>\n            <div ref={refProduct} key={title} className='product'>\n                <Link\n                    to={{\n                        pathname: `shoe/item/${id}`,\n                        state: {\n                            prods: prod,\n                            fromShop: true,\n                        },\n                    }}\n                >\n                    <button className='product-info-btn'>\n                        <i className='info icon' />\n                    </button>\n                </Link>\n                <button\n                    className='shoe-buy-btn'\n                    onClick={() => {\n                        buyShoe()\n                    }}\n                >\n                    <i className='shopping cart icon' />\n                </button>\n                <div className='shoe-back' />\n                <img ref={refPic} className='shoe-pic' alt={title} src={img} />\n                <p ref={refTitle} className='shoe-title'>\n                    {title}\n                </p>\n                <p ref={refPrice} className='shoe-price'>\n                    {price}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addItem: (item) => {\n            dispatch(addItem(item))\n        },\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Shoe)\n","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\reducers\\index.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\actions\\index.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Basket\\Basket.js",["100"],"import React, { useEffect, useState } from 'react'\nimport './Basket.css'\nimport { connect } from 'react-redux'\nimport { removeItem } from '../../redux/actions'\n\nfunction Basket(props) {\n    let [basket, setBasket] = useState(props.products),\n        [totalPrice, setTotalPrice] = useState(0)\n\n    useEffect(() => {\n        if (basket.length > 0) {\n            let total = basket.reduce((prev, next) => {\n                return prev + parseInt(next.price) * next.quantity\n            }, 0)\n            setTotalPrice(total)\n        }\n    }, [basket])\n\n    const removeFromBasket = (id) => {\n        props.removeItem(id)\n    }\n\n    const renderOrder = (order) => {\n        return order.map((item) => {\n            return (\n                <div key={item.title} className='basket__product'>\n                    <i\n                        className='close icon'\n                        onClick={() => removeFromBasket(item.id)}\n                    />\n                    <img src={item.image} alt={item.title} />\n                    <p className='basket__product-info'>{item.title}</p>\n                    <p className='basket__product-info'>Price: {item.price}</p>\n                    <p className='basket__product-info'>\n                        Quantity: {item.quantity}\n                    </p>\n                    <p>{item.size}</p>\n                </div>\n            )\n        })\n    }\n\n    const conditionalRendering = () => {\n        if (basket.length === 0) {\n            return <p>Your basket is empty</p>\n        } else if (basket.length >= 1) {\n            return (\n                <>\n                    {renderOrder(basket)}\n                    <div className='basket__price'>{totalPrice} Euro</div>\n                </>\n            )\n        }\n    }\n\n    return (\n        <div className='basket'>\n            <div className='basket__order'>{conditionalRendering()}</div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return { products: state.products }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        removeItem: (item) => {\n            dispatch(removeItem(item))\n        },\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Basket)\n","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\store.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Shop\\Shoe\\ShoeCard.js",["101","102"],"import React from 'react'\nimport './ShoeCard.css'\nimport { connect } from 'react-redux'\nimport * as actionCreators from '../../../redux/actions'\nimport Alert from '../../vidgets/Alert'\nimport { db } from '../../../firebase/Firebase'\nimport { HashRouter, Link } from 'react-router-dom'\nimport LoaderText from '../../SemanticUI/Loader'\nimport { appHistory } from '../../App/App'\n\nclass ShoeCard extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            items: [],\n            ready: false,\n            size: null,\n            alert: false,\n            sizes: {\n                tS: 37,\n                tE: 38,\n                tN: 39,\n                f: 40,\n                fO: 41,\n                fT: 42,\n            },\n            itemId: parseInt(this.props.match.params.id),\n            fromShop: false,\n            fromDatabase: false,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.location.state !== undefined) {\n            this.setState({\n                items: this.props.location.state.prods,\n                fromShop: true,\n            })\n        } else {\n            this.getDataFromDatabase()\n        }\n    }\n\n    getDataFromDatabase = () => {\n        db.collection('products')\n            .get()\n            .then((items) => {\n                let arr = []\n                items.forEach((item) => {\n                    let transformVar = item.data()\n                    arr.push(transformVar)\n                })\n                return arr\n            })\n            .then((data) => {\n                this.setState({\n                    items: data,\n                    fromDatabase: true,\n                })\n            })\n    }\n\n    renderI = () => {\n        let id = this.state.itemId,\n            item\n        let renderingItem\n        if (this.state.fromDatabase === true) {\n            item = this.state.items.find((i) => i.item.id === id)\n            renderingItem = item.item\n        } else if (this.state.fromShop === true) {\n            item = this.state.items.find((i) => i.id === id)\n            renderingItem = item\n        }\n\n        return (\n            <div className='product-details'>\n                <div className='product-details__header'>\n                    <h1>{renderingItem.title}</h1>\n                    <p className='product-details__description'>\n                        Description. Shoe. Description. Shoe. Lorem ipsum dolor\n                        sit amet. Lorem ipsum dolor sit amet, consectetur\n                        adipisicing elit. Autem, qui.\n                    </p>\n                </div>\n\n                <div className='product-details__view'>\n                    <div className='product-details__img'>\n                        <img src={renderingItem.image} />\n                    </div>\n                </div>\n                <div className='product-details__more'>\n                    <div className='product-details__sizes'>\n                        <p className='sizes-header'>Sizes:</p>\n                        <div\n                            className='sizes-btn'\n                            onClick={() =>\n                                this.sizeHandler(this.state.sizes.tS)\n                            }\n                        >\n                            {this.state.sizes.tS}\n                        </div>\n                        <div\n                            className='sizes-btn'\n                            onClick={() =>\n                                this.sizeHandler(this.state.sizes.tE)\n                            }\n                        >\n                            {this.state.sizes.tE}\n                        </div>\n                        <div\n                            className='sizes-btn'\n                            onClick={() =>\n                                this.sizeHandler(this.state.sizes.tN)\n                            }\n                        >\n                            {this.state.sizes.tN}\n                        </div>\n                        <div\n                            className='sizes-btn'\n                            onClick={() => this.sizeHandler(this.state.sizes.f)}\n                        >\n                            {this.state.sizes.f}\n                        </div>\n                        <div\n                            className='sizes-btn'\n                            onClick={() =>\n                                this.sizeHandler(this.state.sizes.fO)\n                            }\n                        >\n                            {this.state.sizes.fO}\n                        </div>\n                        <div\n                            className='sizes-btn'\n                            onClick={() =>\n                                this.sizeHandler(this.state.sizes.fT)\n                            }\n                        >\n                            {this.state.sizes.fT}\n                        </div>\n                    </div>\n                    <div className='product-details__buttons'>\n                        <button\n                            className='shoe-btn buy-btn'\n                            onClick={(e) => this.sizeReduxHandler(e)}\n                        >\n                            +\n                        </button>\n                        <button\n                            className='shoe-btn remove-btn'\n                            onClick={(e) => this.sizeReduxRemover(e)}\n                        >\n                            -\n                        </button>\n                    </div>\n                    {alert === true ? (\n                        <Alert text={'Choose a size, please'} />\n                    ) : null}\n                    <p className='product-details__price'>\n                        {renderingItem.price}\n                    </p>\n                </div>\n            </div>\n        )\n    }\n\n    conditionalRendering = () => {\n        if (this.state.fromShop || this.state.fromDatabase) {\n            return this.renderI()\n        }\n        return <LoaderText />\n    }\n\n    changeItemToPrevious = () => {\n        if (this.state.itemId !== 1) {\n            appHistory.push(`/shoe/item/${this.state.itemId - 1}`)\n            this.setState((prevState) => ({\n                itemId: prevState.itemId - 1,\n            }))\n            return (\n                <Link\n                    to={{\n                        pathname: `shoe/item/${this.state.itemId}`,\n                        state: {\n                            prods: this.state.items,\n                        },\n                    }}\n                />\n            )\n        }\n    }\n\n    changeItemToNext = () => {\n        if (this.state.itemId !== 10) {\n            appHistory.push(`/shoe/item/${this.state.itemId + 1}`)\n            this.setState((prevState) => ({\n                itemId: prevState.itemId + 1,\n            }))\n            return (\n                <Link\n                    to={{\n                        pathname: `shoe/item/${this.state.itemId}`,\n                        state: {\n                            prods: this.state.items,\n                        },\n                    }}\n                />\n            )\n        }\n    }\n\n    refreshRoute = () => {\n        appHistory.push({ pathname: '/' })\n    }\n\n    sizeHandler = (s) => {\n        if (s !== undefined) {\n            this.setState({\n                size: s,\n            })\n        }\n    }\n\n    sizeReduxHandler = () => {\n        if (this.state.size !== null && !isNaN(this.state.size)) {\n            let itemWithSize = {}\n            if (this.state.fromDatabase) {\n                let item = this.state.items.find(\n                    (item) => item.item.id === this.state.itemId\n                )\n                itemWithSize = {\n                    ...item.item,\n                    size: [...item.item.size, this.state.size],\n                }\n            } else if (this.state.fromShop) {\n                let item = this.state.items.find(\n                    (i) => i.id === this.state.itemId\n                )\n                itemWithSize = {\n                    ...item,\n                    size: [...item.size, this.state.size],\n                }\n            }\n            this.props.addItem(itemWithSize)\n        }\n        this.setState({\n            alert: true,\n        })\n    }\n\n    sizeReduxRemover = (e) => {\n        if (this.state.fromDatabase) {\n            let item = this.state.items.find(\n                (item) => item.item.id === this.state.itemId\n            )\n            this.props.removeItem(item.item.id)\n        } else if (this.state.fromShop) {\n            let item = this.state.items.find(\n                (item) => item.id === this.state.itemId\n            )\n            this.props.removeItem(item.id)\n        }\n    }\n    render() {\n        return (\n            <div className='details'>\n                <p className='details-header'>Product Details</p>\n                <div className='shoe-card__nav-btn'>\n                    <button\n                        onClick={() => this.changeItemToPrevious()}\n                        className='ui left attached button secondary'\n                    >\n                        Previous\n                    </button>\n                    <button\n                        onClick={() => this.changeItemToNext()}\n                        className='right attached ui button secondary'\n                    >\n                        Next\n                    </button>\n                </div>\n                <Link to={'/shop'}>\n                    <button\n                        className='ui inverted brown basic button back-btn'\n                        onClick={this.refreshRoute}\n                    >\n                        Back to Shop\n                    </button>\n                </Link>\n                {this.conditionalRendering()}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return state\n}\n\nexport default connect(mapStateToProps, actionCreators)(ShoeCard)\n","C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\firebase\\firebaseConfig.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\vidgets\\Alert.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\firebase\\Firebase.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\firebase\\items.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\SemanticUI\\Loader.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\SemanticUI\\NextIcon.js",[],["103","104"],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\components\\Shop\\UndoBtn.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\reducers\\purchaseReducer.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\reducers\\initReducer.js",[],"C:\\Users\\Lera\\WebstormProjects\\test-ex\\src\\redux\\reducers\\filterShopReducer.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":11,"column":5,"nodeType":"111","endLine":11,"endColumn":14,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":13,"column":19,"nodeType":"111","messageId":"115","endLine":13,"endColumn":22},{"ruleId":"109","severity":1,"message":"116","line":28,"column":5,"nodeType":"111","endLine":28,"endColumn":14,"suggestions":"117"},{"ruleId":"109","severity":1,"message":"118","line":56,"column":8,"nodeType":"119","endLine":56,"endColumn":17,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"121","line":1,"column":17,"nodeType":"111","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"122","line":1,"column":36,"nodeType":"111","messageId":"115","endLine":1,"endColumn":44},{"ruleId":"113","severity":1,"message":"123","line":7,"column":18,"nodeType":"111","messageId":"115","endLine":7,"endColumn":27},{"ruleId":"113","severity":1,"message":"124","line":7,"column":10,"nodeType":"111","messageId":"115","endLine":7,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":88,"column":25,"nodeType":"127","endLine":88,"endColumn":58},{"ruleId":"105","replacedBy":"128"},{"ruleId":"107","replacedBy":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setQuantity'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [products] as a second argument to the useEffect Hook.","Identifier",["132"],"no-unused-vars","'acc' is assigned a value but never used.","unusedVar","React Hook useEffect contains a call to 'setProducts'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [items, products.length] as a second argument to the useEffect Hook.",["133"],"React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.","ArrayExpression",["134"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'setBasket' is assigned a value but never used.","'HashRouter' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["130"],["131"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Add dependencies array: [products]",{"range":"141","text":"142"},"Add dependencies array: [items, products.length]",{"range":"143","text":"144"},"Update the dependencies array to be: [fetched, products]",{"range":"145","text":"146"},[562,562],", [products]",[964,964],", [items, products.length]",[1605,1614],"[fetched, products]"]